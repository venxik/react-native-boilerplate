name: CI-Android

on:
  push:
    branches: [main, develop, hotfix/detox-github-action]

jobs:
  e2e-test:
    name: e2e Android test
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Set up our JDK environment # setup JDK environment: mandatory as we need to build android project
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile

      ## configure cache for gradle : will help to reduce build time
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      # - name: Download Android Emulator Image
      #   run: |
      #     echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-30;default;x86"
      #     echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd --force --name emu --device "Pixel" -k 'system-images;android-30;default;x86'
      #     $ANDROID_HOME/emulator/emulator -list-avds

      - name: Configure Keystore
        run: |
          cd android
          echo "$ANDROID_KEYSTORE_FILE" > keystore.jks.b64
          base64 -d -i keystore.jks.b64 > app/keystore.jks
          echo "storeFile=keystore.jks" >> keystore.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> keystore.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> keystore.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> keystore.properties
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}

      - name: Create google-services.json file
        run: |
          cd android/app && echo "$GOOGLE_SERVICES" > google-services.json.b64
          base64 -d -i google-services.json.b64 > google-services.json && cd ../..
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}

      - name: Configure Keystore
        run: |
          cd android
          echo "$ANDROID_KEYSTORE_FILE" > keystore.jks.b64
          base64 -d -i keystore.jks.b64 > app/keystore.jks
          echo "storeFile=keystore.jks" >> keystore.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> keystore.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> keystore.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> keystore.properties
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}

      - name: Create google-services.json file
        run: |
          cd android/app && echo "$GOOGLE_SERVICES" > google-services.json.b64
          base64 -d -i google-services.json.b64 > google-services.json && cd ../..
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}

      # - name: Android Emulator
      #   timeout-minutes: 10
      #   continue-on-error: true
      #   run: |
      #     echo "Starting emulator"
      #     nohup $ANDROID_HOME/emulator/emulator -avd emu -no-audio -no-snapshot -no-window &
      #     $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
      #     $ANDROID_HOME/platform-tools/adb devices
      #     echo "Emulator started"

      - name: Run Detox Build
        run: yarn build:e2e-android-dev-debug

      - name: Run Detox Test(s)
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: default
          arch: x86_64
          profile: pixel
          avd-name: Pixel_API_30_AOSP
          enable-hw-keyboard: true
          script: bash ${{ github.workspace }}/scripts/run-e2e-android-release.sh

      - name: Store Detox artifacts on test failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: detox-artifacts
          path: artifacts # Default path for Detox artifacts
